--[[
   Creator: Paras/P4rasail
   Date: 2023/10/10
   Description: Character management script for handling player characters.
   Functions: CharAdded, PlayerAdded, _G.LoadChar
   Example: _G.LoadChar(Player)
   Generated by Copilot
]]

local RepStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
Players.CharacterAutoLoads = false

local Indexes = require(RepStorage:WaitForChild("Indexes"))

_G.LoadChar = function(Player:Player)
	Player:LoadCharacterWithHumanoidDescription(script:WaitForChild("HumanoidDescription"))
end
if not Indexes.Loaded then
repeat task.wait() until Indexes.Loaded
end

local LoadedTab = {}
function CharAdded(Player:Player,Char:Model)
	if not Char:IsA("Model") then return end
	if not Player and Players:GetPlayerFromCharacter(Char) then return end
	if Char.Parent ~= workspace.characters then
		repeat
			Char.Archivable = true
			Char.Parent = workspace.characters
			task.wait()
		until Char.Parent == workspace.characters
	end
	for i,v in Char:GetChildren() do
		--print(v)
		if v:IsA("Accessory") or v:IsA("Clothing") or v:IsA("Decal") then
			v:Destroy()
		end
		
		
	end
	Indexes.Modules.GameSystems.RenderService:BindOutfit(Char,"Goku")
	Indexes.Modules.GameSystems.RenderService:BindFace(Char,"Goku")
	Indexes.Modules.GameSystems.RenderService:BindHair(Char,"male 7")
	if Player then
		local Hum:Humanoid = Char:WaitForChild("Humanoid")
	Hum.Died:Once(function()
		task.wait(.3)
		Char:Destroy()
		_G.LoadChar(Player)
	end)
		local CharConfig = Indexes.Modules.Systems.CharacterManager:Create(Char)
	else
		local CharConfig = Indexes.Modules.Systems.CharacterManager:Create(Char)
		CharConfig.AI = Indexes.ServerModules.Systems.NPCAI(Char)
	end
end

local Loaded = {}
_G.Modules.Systems.Networker:CreatePort("GameLoad",function(Player:Player,Type)
	if not Loaded[Player] then
		Loaded[Player] = true
		_G.LoadChar(Player)
		--_G.print(`{Player} Loaded!`)
	end
end)


function PlayerAdded(Player:Player)
	--print(Indexes.Modules.Systems)
	local CharManager = Indexes.Modules.Systems.CharacterManager
	if not CharManager.Completed then
		repeat task.wait() until CharManager.Completed
	end
	--local Create = CharManager:Create(Player)

	if Player.Character then
		CharAdded(Player,Player.Character)
	end
	Player.CharacterAppearanceLoaded:Connect(function(Char)
		CharAdded(Player,Char)
	end)
end
repeat task.wait() until _G.Loaded
for i,v in Players:GetPlayers() do
	PlayerAdded(v)
end
Players.PlayerAdded:Connect(PlayerAdded)
for i,v in workspace.characters:GetChildren() do
	
	CharAdded(nil,v)
end
workspace.characters.ChildAdded:Connect(function(child)
	if child:IsA("Model") then
		CharAdded(nil,child)
	end
end)